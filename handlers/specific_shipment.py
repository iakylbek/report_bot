from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext

from keyboards.period_kb import get_period_keyboard
from states_group import ProductShipments

OPERATION = "specific_shipment"
specific_shipment_router = Router()

@specific_shipment_router.callback_query(F.data == "specific_shipment")
async def get_product_name(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:")
    await state.set_state(ProductShipments.product_name_state)
    await callback.answer()

@specific_shipment_router.message(StateFilter(ProductShipments.product_name_state))
async def get_period(message: Message, state: FSMContext):
    await state.update_data(product_name=message.text)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:", reply_markup=get_period_keyboard(OPERATION))
    await state.set_state(ProductShipments.period_state)

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
@specific_shipment_router.callback_query(
    StateFilter(ProductShipments.period_state), F.data.startswith(f"{OPERATION}_period_")
)
async def show_product_shipment(callback: CallbackQuery, state: FSMContext):
    user_data = await state.get_data()
    product_name = user_data.get("product_name")
    period = "–Ω–µ–¥–µ–ª—é" if "week" in callback.data else "–º–µ—Å—è—Ü"

    response_text = f"üì¶ –û—Ç–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞ '{product_name}' –∑–∞ {period}: 10 —à—Ç."

    await callback.message.answer(response_text)
    await state.clear()
    await callback.answer()
